{"version":3,"sources":["serviceWorker.js","components/TaskFormLopHoc.js","components/TaskItemLopHoc.js","components/TaskListLopHoc.js","QuanlyLopHoc.js","components/TaskFormMonHoc.js","components/TaskItemMonHoc.js","components/TaskListMonHoc.js","QuanLyMonHoc.js","Danhsachquanly.js","components/TaskFormGiaovien.js","components/TaskItemGiaovien.js","components/TaskListGiaovien.js","QuanlyGiaovien.js","components/TaskFormHocSinh.js","components/TaskItemHocSinh.js","components/TaskListHocSinh.js","QuanlyHocSinh.js","menu.js","index.js"],"names":["Boolean","window","location","hostname","match","TaskFormLopHoc","props","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClearST","onCloseForm","malop","tenkhoi","tenlop","giaovien","chuyenmon","id","this","tasksLopHoc","className","onClick","type","Component","TaskItemLopHoc","onDeleteLopHoc","onUpdateLopHoc","index","TaskListLopHoc","elmTasks","map","key","LopHoc","onToggleForm","isDisplayForm","taskEditing","onClose","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","task","splice","onShowForm","getItem","parse","Math","floor","random","toString","substring","s4","elmTaskFromLopHoc","style","height","paddingLeft","display","margin","TaskFormMonHoc","onClear","mamh","monhoc","isInputValid","errorMessageHT","errorMessageMonDay","tasksS","onBlur","ValidationHT","color","errorMessage","TaskItemMonHoc","onDeleteMonHoc","onUpdateMonHoc","TaskListMonHoc","elmTasksS","MonHoc","elmTaskFromMonHoc","Danhsachquanly","class","marginTop","padding","background","alignItems","justifyContent","fontSize","cursor","marginLeft","TaskFormGiaovien","monday","chucvu","email","sdt","taskGiaovien","ValidationGiaoVien","errorMessageGiaoVien","Validationmonday","errorMessageMonChuyen","Validationemail","TaskItemGiaovien","onDeleteGiaovien","onUpdateGiaovien","TaskListGiaovien","fitterName","Giaovien","elmTaskFromGiaovien","TaskFormHocSinh","mahs","HocSinh","lop","ngaysinh","taskHocSinh","Validationmahs","ValidationHocSinh","errorMessageHocSinh","TaskItemHocSinh","onDeleteHocSinh","onUpdateHocSinh","TaskListHocSinh","elmTaskFromHocSinh","Menu","htmlFor","onBar","onCancel","alt","to","activeStyle","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce278ee0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormLopHoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            malop: '',\r\n            tenkhoi: '',\r\n            tenlop: '',\r\n            giaovien: '',\r\n            chuyenmon: ''\r\n            // isInputValid: true,\r\n            // errorMessageTenKhoi: '',\r\n            // errorMessageTenLop: '',\r\n            // errorMessageGiaoVien: '',\r\n            // errorMessageMonChuyen: ''\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    // ValidationTenKhoi = (event) => {\r\n    //     if(this.state.tenkhoi ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageTenKhoi : 'Vui lòng nhập tên khối'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageTenKhoi : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // ValidationTenlop = (event) => {\r\n    //     if(this.state.tenlop ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageTenLop : 'Vui lòng nhập tên lớp'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageTenLop : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // ValidationGiaoVien = (event) => {\r\n    //     if(this.state.giaovien ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageGiaoVien : 'Vui lòng nhập tên giáo viên'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageGiaoVien : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tasksLopHoc) {\r\n            this.setState({\r\n                id : this.props.tasksLopHoc.id,\r\n                malop: this.props.tasksLopHoc.malop,\r\n                tenkhoi: this.props.tasksLopHoc.tenkhoi,\r\n                tenlop: this.props.tasksLopHoc.tenlop,\r\n                giaovien: this.props.tasksLopHoc.giaovien,\r\n                chuyenmon: this.props.tasksLopHoc.chuyenmon\r\n            })\r\n        }\r\n    }\r\n\r\n    // ValidationChuyenMon = (event) => {\r\n    //     if(this.state.chuyenmon ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageMonChuyen : 'Vui lòng nhập môn dạy'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageMonChuyen : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.onClearST();\r\n        this.onCloseForm();\r\n    }\r\n\r\n    onClearST = () => {\r\n        this.setState({\r\n            malop: '',\r\n            tenkhoi: '',\r\n            tenlop: '',\r\n            giaovien: '',\r\n            chuyenmon: ''\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">Thêm lớp học\r\n                  <i className=\"fa fa-times-circle text-right\"\r\n                            onClick={this.onCloseForm}></i></h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    {/* Form input*/}\r\n\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group invalid\">\r\n                            <label>Mã lớp</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='malop'\r\n                                value={this.state.malop}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group invalid\">\r\n                            <label>Tên khối</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='tenkhoi'\r\n                                value={this.state.tenkhoi}\r\n                                onChange={this.onChange}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên lớp:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='tenlop'\r\n                                value={this.state.tenlop}\r\n                                onChange={this.onChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label >Giáo viên chủ nhiệm</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='giaovien'\r\n                                value={this.state.giaovien}\r\n                                onChange={this.onChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label >Môn chuyên:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='chuyenmon'\r\n                                value={this.state.chuyenmon}\r\n                                onChange={this.onChange} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">\r\n                                <i className=\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\" onClick={this.onClearST}>\r\n                                <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormLopHoc;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemLopHoc extends Component {\r\n    \r\n        onDeleteLopHoc = () => {\r\n           this.props.onDeleteLopHoc(this.props.tasksLopHoc.id);\r\n        }\r\n        \r\n        onUpdateLopHoc = () => {\r\n            this.props.onUpdateLopHoc(this.props.tasksLopHoc.id); \r\n        }\r\n\r\n        \r\n        render(){\r\n        var {tasksLopHoc,index } = this.props;\r\n            \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{tasksLopHoc.malop}</td>\r\n                            <td className = \"text-center\">{tasksLopHoc.tenkhoi}</td>\r\n                            <td className = \"text-center\">{tasksLopHoc.tenlop}</td>\r\n                            <td className = \"text-center\">{tasksLopHoc.giaovien}</td>\r\n                            <td className = \"text-center\">{tasksLopHoc.chuyenmon}</td>\r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\"  onClick = {this.onUpdateLopHoc}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onDeleteLopHoc}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i>\r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemLopHoc;","import React, { Component } from 'react';\r\nimport TaskItemLopHoc from './TaskItemLopHoc'\r\n\r\n\r\nclass TaskListLopHoc extends Component {\r\n\r\n        render(){\r\n        var {tasksLopHoc} = this.props\r\n        var elmTasks = tasksLopHoc.map((tasksLopHoc, index) =>{\r\n                return <TaskItemLopHoc  key ={index} index = {index}  tasksLopHoc = {tasksLopHoc}\r\n                onDeleteLopHoc = {this.props.onDeleteLopHoc}\r\n                onUpdateLopHoc = {this.props.onUpdateLopHoc}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Mã lớp</th>\r\n                            <th className = \"text-center\">Tên khối</th>\r\n                            <th className = \"text-center\">Tên lớp</th>\r\n                            <th className = \"text-center\">Giáo viên chủ nhiệm</th>\r\n                            <th className = \"text-center\">Chuyên môn</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListLopHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormLopHoc from './components/TaskFormLopHoc'\r\nimport TaskListLopHoc from './components/TaskListLopHoc'\r\n\r\nclass LopHoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasksLopHoc: [\r\n                {\r\n                    id: this.generateID(),\r\n                    malop: 'L10B3',\r\n                    tenkhoi: 'Khối 10',\r\n                    tenlop: 'Lớp 10B3',\r\n                    giaovien: 'Nguyễn Văn Linh',\r\n                    chuyenmon: 'Toán'\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    malop: 'L10B5',\r\n                    tenkhoi: 'Khối 10',\r\n                    tenlop: 'Lớp 10B5',\r\n                    giaovien: 'Hoàng Thị Hà',\r\n                    chuyenmon: 'Anh văn'\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    malop: 'L10B6',\r\n                    tenkhoi: 'Khối 10',\r\n                    tenlop: 'Lớp 10B6',\r\n                    giaovien: 'Nguyễn Văn Tuấn',\r\n                    chuyenmon: 'Ngữ Văn'\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    malop: 'L11B1',\r\n                    tenkhoi: 'Khối 11',\r\n                    tenlop: 'Lớp 11B1',\r\n                    giaovien: 'Trần Thu Hoài',\r\n                    chuyenmon: 'Hóa học'\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    malop: 'L11B2',\r\n                    tenkhoi: 'Khối 11',\r\n                    tenlop: 'Lớp 10B2',\r\n                    giaovien: 'Phạm Văn Khánh',\r\n                    chuyenmon: 'Vật lý'\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    malop: 'L12B4',\r\n                    tenkhoi: 'Khối 12',\r\n                    tenlop: 'Lớp 12B4',\r\n                    giaovien: 'Lê Bá Cường',\r\n                    chuyenmon: 'Sinh học'\r\n                }\r\n\r\n            ],\r\n            isDisplayForm: false,\r\n        }\r\n    }\r\n//  onReset = () => {\r\n//         var tasksLopHoc = [\r\n//             {\r\n//                 id: this.generateID(),\r\n//                 malop: 'L10B3',\r\n//                 tenkhoi: 'Khối 10',\r\n//                 tenlop: 'Lớp 10B3',\r\n//                 giaovien: 'Nguyễn Văn Linh',\r\n//                 chuyenmon: 'Toán'\r\n//             },\r\n//             {\r\n//                 id: this.generateID(),\r\n//                 malop: 'L10B5',\r\n//                 tenkhoi: 'Khối 10',\r\n//                 tenlop: 'Lớp 10B5',\r\n//                 giaovien: 'Hoàng Thị Hà',\r\n//                 chuyenmon: 'Anh văn'\r\n//             },\r\n//             {\r\n//                 id: this.generateID(),\r\n//                 malop: 'L10B6',\r\n//                 tenkhoi: 'Khối 10',\r\n//                 tenlop: 'Lớp 10B6',\r\n//                 giaovien: 'Nguyễn Văn Tuấn',\r\n//                 chuyenmon: 'Ngữ Văn'\r\n//             },\r\n//             {\r\n//                 id: this.generateID(),\r\n//                 malop: 'L11B1',\r\n//                 tenkhoi: 'Khối 11',\r\n//                 tenlop: 'Lớp 11B1',\r\n//                 giaovien: 'Trần Thu Hoài',\r\n//                 chuyenmon: 'Hóa học'\r\n//             },\r\n//             {\r\n//                 id: this.generateID(),\r\n//                 malop: 'L11B2',\r\n//                 tenkhoi: 'Khối 11',\r\n//                 tenlop: 'Lớp 10B2',\r\n//                 giaovien: 'Phạm Văn Khánh',\r\n//                 chuyenmon: 'Vật lý'\r\n//             },\r\n//             {\r\n//                 id: this.generateID(),\r\n//                 malop: 'L12B4',\r\n//                 tenkhoi: 'Khối 12',\r\n//                 tenlop: 'Lớp 12B4',\r\n//                 giaovien: 'Lê Bá Cường',\r\n//                 chuyenmon: 'Sinh học'\r\n//             }\r\n\r\n//         ]\r\n//         this.setState({\r\n//             tasksLopHoc: tasksLopHoc\r\n//         })\r\n//         localStorage.setItem('tasksLopHoc', JSON.stringify(tasksLopHoc));\r\n//     }\r\n\r\n\r\n\r\n\r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm,\r\n            taskEditing: null\r\n        })\r\n\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasksLopHoc')) {\r\n            var tasksLopHoc = JSON.parse(localStorage.getItem('tasksLopHoc'));\r\n            this.setState({\r\n                tasksLopHoc: tasksLopHoc\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        var { tasksLopHoc } = this.state;\r\n        if (data.id === '') {\r\n            data.id = this.generateID();\r\n            tasksLopHoc.push(data);\r\n\r\n        } else {\r\n            //Editing   \r\n                var index = this.findIndex(data.id);\r\n                tasksLopHoc[index] = data;\r\n\r\n        }\r\n        this.setState({\r\n            tasksLopHoc: tasksLopHoc,\r\n            taskEditing: null\r\n        })\r\n        localStorage.setItem('tasksLopHoc', JSON.stringify(tasksLopHoc));\r\n\r\n        }\r\n    \r\n\r\n    \r\n\r\n    findIndex = (id) => {\r\n        var { tasksLopHoc } = this.state;\r\n        var result = -1;\r\n        tasksLopHoc.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDeleteLopHoc = (id) => {\r\n        var { tasksLopHoc } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            tasksLopHoc.splice(index, 1);\r\n            this.setState({\r\n                tasksLopHoc: tasksLopHoc\r\n            });\r\n            localStorage.setItem('tasksLopHoc', JSON.stringify(tasksLopHoc));\r\n        }\r\n        this.onClose();\r\n    }\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onUpdateLopHoc = (id) => {\r\n        var { tasksLopHoc } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = tasksLopHoc[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n    render() {\r\n\r\n        var { isDisplayForm, tasksLopHoc, taskEditing } = this.state;\r\n\r\n        var elmTaskFromLopHoc = isDisplayForm\r\n            ? <TaskFormLopHoc\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                tasksLopHoc={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n\r\n        return (\r\n            //   <div>\r\n            // menu\r\n            <div className='Form-app'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\" style={{ height: '100%' }}>\r\n                        <h1>Danh sách các lớp học</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-3 col-sm-3 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add LopHoc */}\r\n                            {elmTaskFromLopHoc}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm lớp học\r\n                                                    </button>&nbsp;\r\n                                                   </div>\r\n                                                   {/* <button type=\"button\" \r\n                                                            className=\"btn btn-danger mb-5 \"\r\n                                                            onClick = {this.onReset}>\r\n                                                        \r\n                                                        Reset All\r\n                                                    </button> */}\r\n                            {/* Task List*/}\r\n                            <TaskListLopHoc tasksLopHoc={tasksLopHoc}\r\n                                onDeleteLopHoc={this.onDeleteLopHoc}\r\n                                onUpdateLopHoc={this.onUpdateLopHoc} />\r\n                            <button type=\"button\" className=\"btn btn-primary\" style={{ display: 'block', margin: '0 auto' }}>1</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            //    </div>\r\n\r\n\r\n\r\n            //   </div>       \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default LopHoc;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormMonHoc extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            mamh: '',\r\n            monhoc: '',\r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageMonDay: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(this.props.tasksS){\r\n            this.setState({\r\n                id: this.props.tasksS.id,\r\n                mamh : this.props.tasksS.mamh,\r\n                monhoc : this.props.tasksS.monhoc  \r\n            })\r\n        }\r\n    }\r\n    \r\n    // ValidationHT = (event) => {\r\n    //     if(this.state.monhoc ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessage : 'Vui lòng nhập môn học'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessage : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClear = () =>  {\r\n          this.setState({\r\n              mamh: '',\r\n              monhoc : ''\r\n          })\r\n    }\r\n    \r\n  \r\n        render(){\r\n        \r\n           \r\n        return (\r\n            \r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm môn học\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i>\r\n                  </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                   <div className=\"form-group invalid\">\r\n                           <label>Mã môn học:</label>\r\n                           <input type=\"text\" className=\"form-control mt-10\"\r\n                           name ='mamh'\r\n                           value = {this.state.mamh}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationHT}\r\n                          />\r\n                            {this.state.mamh === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessage}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group invalid\">\r\n                           <label>Tên môn học:</label>\r\n                           <input type=\"text\" className=\"form-control mt-10\"\r\n                           name ='monhoc'\r\n                           value = {this.state.monhoc}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationHT}\r\n                          />\r\n                            {this.state.monhoc === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessage}\r\n                            </span> : null }\r\n                       </div>\r\n                       \r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">\r\n                                    <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onClear}>\r\n                                    <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                        </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormMonHoc;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemMonHoc extends Component {\r\n     \r\n\r\n    onDeleteMonHoc = () => {\r\n        this.props.onDeleteMonHoc(this.props.tasksS.id);\r\n    }\r\n    onUpdateMonHoc = () => {\r\n        this.props.onUpdateMonHoc(this.props.tasksS.id); \r\n    }\r\n        render(){\r\n        var {tasksS,index } = this.props;\r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{tasksS.mamh}</td>\r\n                            <td className = \"text-center\">{tasksS.monhoc}</td>\r\n                            \r\n                            \r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdateMonHoc}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDeleteMonHoc}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i> \r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemMonHoc;","import React, { Component } from 'react';\r\nimport TaskItemMonHoc from './TaskItemMonHoc'\r\n\r\n\r\nclass TaskListMonHoc extends Component {\r\n    \r\n\r\n        render(){\r\n        var {tasksS} = this.props\r\n        var elmTasksS = tasksS.map((tasksS, index) =>{\r\n                return <TaskItemMonHoc  key ={index} index = {index}  tasksS = {tasksS}\r\n                             onUpdateMonHoc = {this.props.onUpdateMonHoc}\r\n                             onDeleteMonHoc = {this.props.onDeleteMonHoc}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = 'text-center'>STT</th>\r\n                            <th className = 'text-center'>Mã môn học</th>\r\n                            <th className = 'text-center'>Môn học</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasksS}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListMonHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormMonHoc from './components/TaskFormMonHoc'\r\nimport TaskListMonHoc from './components/TaskListMonHoc'\r\n\r\nclass MonHoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasksS: [\r\n                {\r\n                    id: this.generateID(),\r\n                    mamh: 'TOAN',\r\n                    monhoc: 'Toán'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mamh: 'ANH',\r\n                    monhoc: 'Anh văn'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mamh: 'VATLY',\r\n                    monhoc: 'Vật lý'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mamh: 'VAN',\r\n                    monhoc: 'Ngữ văn'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mamh: 'HOA',\r\n                    monhoc: 'Hóa học'\r\n\r\n                }\r\n            ],\r\n            isDisplayForm: false\r\n        }\r\n    }\r\n\r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm,\r\n            taskEditing: null\r\n        })\r\n\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n    // onReset = () => {\r\n    //     var tasksS = [\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mamh: 'TOAN',\r\n    //             monhoc: 'Toán'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mamh: 'ANH',\r\n    //             monhoc: 'Anh văn'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mamh: 'VATLY',\r\n    //             monhoc: 'Vật lý'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mamh: 'VAN',\r\n    //             monhoc: 'Ngữ văn'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mamh: 'HOA',\r\n    //             monhoc: 'Hóa học'\r\n\r\n    //         }\r\n    //     ]\r\n    //     this.setState({\r\n    //         tasksS: tasksS\r\n    //     })\r\n    //     localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n    // }\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasksS')) {\r\n            var tasksS = JSON.parse(localStorage.getItem('tasksS'));\r\n            this.setState({\r\n                tasksS: tasksS\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        var { tasksS } = this.state;\r\n        if (data.id === '') {\r\n            data.id = this.generateID();\r\n            tasksS.push(data);\r\n\r\n        } else {\r\n            //Editing   \r\n            var index = this.findIndex(data.id);\r\n            tasksS[index] = data;\r\n\r\n        }\r\n        this.setState({\r\n            tasksS: tasksS,\r\n            taskEditing: null\r\n        })\r\n        localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n    }\r\n\r\n\r\n\r\n\r\n    findIndex = (id) => {\r\n        var { tasksS } = this.state;\r\n        var result = -1;\r\n        tasksS.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onUpdateMonHoc = (id) => {\r\n        var { tasksS } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = tasksS[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n\r\n    onDeleteMonHoc = (id) => {\r\n        var { tasksS } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            tasksS.splice(index, 1);\r\n            this.setState({\r\n                tasksS: tasksS\r\n            });\r\n            localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n        }\r\n        this.onClose();\r\n    }\r\n    render() {\r\n\r\n        var { tasksS, isDisplayForm, taskEditing } = this.state;\r\n\r\n        var elmTaskFromMonHoc = isDisplayForm\r\n            ? <TaskFormMonHoc\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                tasksS={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n        return (\r\n\r\n\r\n\r\n            <div className='Form-app-monhoc'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1 className='text-center'>Quản lý môn học</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-6 col-sm-4 col-md-4 col-lg-4 mt-50\" : \"\"}>\r\n                            { /* Form Add LopHoc */}\r\n                            {elmTaskFromMonHoc}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 mt-50\"\r\n                            : \"col-xs-12 col-sm-8 col-md-6 col-lg-6 mt-50\"}\r\n                        >\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm môn học\r\n                                                    </button>\r\n                            </div>\r\n                            <br />\r\n                            <br />\r\n                            {/* <button type=\"button\"\r\n                                className=\"btn btn-danger mb-5 \"\r\n                                onClick={this.onReset}>\r\n\r\n                                Làm mới điểm\r\n                                            </button> */}\r\n\r\n                            <div className=\"panel panel-primary panel-class\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h3 className=\"panel-title\">Danh sách môn học</h3>\r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n                                    {/* Task List*/}\r\n                                    <TaskListMonHoc tasksS={tasksS}\r\n                                        onUpdateMonHoc={this.onUpdateMonHoc}\r\n                                        onDeleteMonHoc={this.onDeleteMonHoc} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MonHoc;","import React, { Component } from 'react';\r\n\r\nclass Danhsachquanly extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Form-box'>\r\n           \r\n\r\n                <div class=\"row\" style={{ marginTop: '100px' }}>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#00c0ef' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>3</p>\r\n                                    <h4>Giáo viên</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-users icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px' , cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#00a65a' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>5</p>\r\n                                    <h4>Môn học</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-book-open icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px', cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#f39c11' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>20</p>\r\n                                    <h4>Học sinh</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-user-plus icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px' , cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#dd4c39' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>1</p>\r\n                                    <h4>Tin tức</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-chart-pie icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px' , cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Danhsachquanly;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormGiaovien extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            giaovien: '',\r\n            monday: '',\r\n            chucvu: '',\r\n            email: '',\r\n            sdt: ''\r\n            // isInputValid: true,\r\n            // errorMessageTenKhoi: '' ,\r\n            // errorMessageTenLop: '',\r\n            // errorMessageGiaoVien: '',\r\n            // errorMessageMonChuyen: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    // ValidationTenKhoi = (event) => {\r\n    //     if(this.state.tenkhoi ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageTenKhoi : 'Vui lòng nhập tên khối'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageTenKhoi : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // ValidationTenlop = (event) => {\r\n    //     if(this.state.tenlop ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageTenLop : 'Vui lòng nhập tên lớp'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageTenLop : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n   \r\n    // ValidationGiaoVien = (event) => {\r\n    //     if(this.state.giaovien ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageGiaoVien : 'Vui lòng nhập tên giáo viên'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageGiaoVien : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    componentWillMount() {\r\n        if(this.props.taskGiaovien){\r\n            this.setState({\r\n                id: this.props.taskGiaovien.id,\r\n                giaovien : this.props.taskGiaovien.giaovien,\r\n                monday: this.props.taskGiaovien.monday,\r\n                chucvu: this.props.taskGiaovien.chucvu,\r\n                email: this.props.taskGiaovien.email,\r\n                sdt: this.props.taskGiaovien.sdt\r\n            })\r\n        }\r\n    }\r\n\r\n    // Validationmonday = (event) => {\r\n    //     if(this.state.chucvu ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageMonChuyen : 'Vui lòng nhập môn dạy'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageMonChuyen : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n            this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClearST = () => {\r\n        this.setState({\r\n            giaovien : '',\r\n            monday: '',\r\n            chucvu: '',\r\n            email: '',\r\n            sdt: '',\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm giáo viên\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       \r\n\r\n                       <div className=\"form-group\">\r\n                           <label >Họ tên:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'giaovien'\r\n                           value = {this.state.giaovien}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationGiaoVien}/>\r\n                           {this.state.giaovien === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageGiaoVien}\r\n                            </span> : null } \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Chuyên môn:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'monday'\r\n                           value = {this.state.monday}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.Validationmonday}/>\r\n                           {this.state.monday === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageMonChuyen}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Chủ nhiệm lớp:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'chucvu'\r\n                           value = {this.state.chucvu}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationGiaoVien}/>\r\n                          \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Email:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'email'\r\n                           value = {this.state.email}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.Validationemail}/>\r\n                           \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >SĐT:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'sdt'\r\n                           value = {this.state.sdt}\r\n                           onChange = {this.onChange} />\r\n                          \r\n                       </div>\r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\" onClick = { this.onClearST}>\r\n                            <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormGiaovien;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemGiaovien extends Component {\r\n    \r\n        onDeleteGiaovien = () => {\r\n           this.props.onDeleteGiaovien(this.props.task.id);\r\n        }\r\n        \r\n        onUpdateGiaovien = () => {\r\n            this.props.onUpdateGiaovien(this.props.task.id); \r\n        }\r\n\r\n        \r\n        render(){\r\n        var {task,index } = this.props\r\n           \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{task.giaovien}</td>\r\n                            <td className = \"text-center\">{task.monday}</td>\r\n                            <td className = \"text-center\">{task.chucvu}</td>\r\n                            <td className = \"text-center\">{task.email}</td>\r\n                            <td className = \"text-center\">{task.sdt}</td>\r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\"  onClick = {this.onUpdateGiaovien}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onDeleteGiaovien}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i>\r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemGiaovien;","import React, { Component } from 'react';\r\nimport TaskItemGiaovien from './TaskItemGiaovien'\r\n\r\n\r\nclass TaskListGiaovien extends Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                fitterName: ''\r\n            }\r\n        }\r\n\r\n        render(){\r\n        var {taskGiaovien} = this.props\r\n        var elmTasks = taskGiaovien.map((task, index) =>{\r\n                return <TaskItemGiaovien  key ={index} index = {index}  task = {task}\r\n                onDeleteGiaovien = {this.props.onDeleteGiaovien}\r\n                onUpdateGiaovien = {this.props.onUpdateGiaovien}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Họ tên</th>\r\n                            <th className = \"text-center\">Chuyên môn</th>\r\n                            <th className = \"text-center\">Chủ nhiệm lớp</th>\r\n                            <th className = \"text-center\">Email</th>\r\n                            <th className = \"text-center\">Điện thoại</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListGiaovien;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormGiaovien from './components/TaskFormGiaovien'\r\nimport TaskListGiaovien from './components/TaskListGiaovien'\r\n\r\nclass Giaovien extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskGiaovien: [\r\n                {\r\n                    id: this.generateID(),\r\n                    giaovien: 'Trương Quang Việt',\r\n                    monday: 'Hóa',\r\n                    chucvu: 'không',\r\n                    email: 'tqviet@gmail.com',\r\n                    sdt: '0166421341',\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    giaovien: 'Nguyễn Lan Anh',\r\n                    monday: 'Toán',\r\n                    chucvu: '10B1',\r\n                    email: 'lananh@gmail.com',\r\n                    sdt: '0166464576',\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    giaovien: 'Nguyễn Thị Lan',\r\n                    monday: 'Ngữ Văn',\r\n                    chucvu: '12B1',\r\n                    email: 'nguyenthilan@gmail.com',\r\n                    sdt: '0166424112',\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    giaovien: 'Lê Văn Tiến',\r\n                    monday: 'Anh Văn',\r\n                    chucvu: 'không',\r\n                    email: 'levantien@gmail.com',\r\n                    sdt: '0166421432',\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    giaovien: 'Nguyễn Quang Thuận',\r\n                    monday: 'Vật lý',\r\n                    chucvu: 'không',\r\n                    email: 'nqthuan@gmail.com',\r\n                    sdt: '0166424784',\r\n\r\n                }\r\n            ],\r\n            isDisplayForm: false,\r\n        }\r\n    }\r\n\r\n\r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm,\r\n            taskEditing: null\r\n        })\r\n\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('taskGiaovien')) {\r\n            var taskGiaovien = JSON.parse(localStorage.getItem('taskGiaovien'));\r\n            this.setState({\r\n                taskGiaovien: taskGiaovien\r\n            });\r\n        }\r\n    }\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        var { taskGiaovien } = this.state;\r\n        if (data.id === '') {\r\n            data.id = this.generateID();\r\n            taskGiaovien.push(data);\r\n\r\n        } else {\r\n            //Editing   \r\n            var index = this.findIndex(data.id);\r\n            taskGiaovien[index] = data;\r\n\r\n        }\r\n        this.setState({\r\n            taskGiaovien: taskGiaovien,\r\n            taskEditing: null\r\n        })\r\n        localStorage.setItem('taskGiaovien', JSON.stringify(taskGiaovien));\r\n        this.onCloseForm();\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { taskGiaovien } = this.state;\r\n        var result = -1;\r\n        taskGiaovien.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDeleteGiaovien = (id) => {\r\n        var { taskGiaovien } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            taskGiaovien.splice(index, 1);\r\n            this.setState({\r\n                taskGiaovien: taskGiaovien\r\n            });\r\n            localStorage.setItem('taskGiaovien', JSON.stringify(taskGiaovien));\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n\r\n    \r\n    onUpdateGiaovien = (id) => {\r\n        var { taskGiaovien } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = taskGiaovien[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n    render() {\r\n\r\n        var { isDisplayForm, taskGiaovien, taskEditing } = this.state;\r\n\r\n        var elmTaskFromGiaovien = isDisplayForm\r\n            ? <TaskFormGiaovien\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                taskGiaovien={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n\r\n        return (\r\n            //   <div>\r\n            // menu\r\n            <div className='Form-app'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1>Danh sách giáo viên giảng dạy</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-3 col-sm-3 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add Giaovien */}\r\n                            {elmTaskFromGiaovien}\r\n                        </div>\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm giáo viên\r\n                                                    </button>&nbsp;\r\n                                                   </div>\r\n                            {/* <button type=\"button\" \r\n                                                            className=\"btn btn-danger mb-5 \"\r\n                                                            onClick = {this.onReset}>\r\n                                                        \r\n                                                        Reset All\r\n                                                    </button> */}\r\n                            {/* Task List*/}\r\n\r\n            \r\n                            <TaskListGiaovien taskGiaovien={taskGiaovien}\r\n                                onDeleteGiaovien={this.onDeleteGiaovien}\r\n                                onUpdateGiaovien={this.onUpdateGiaovien} />\r\n                            <button type=\"button\" className=\"btn btn-primary\" style={{ display: 'block', margin: '0 auto' }}>1</button>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            //    </div>\r\n            //   </div>       \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Giaovien","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormHocSinh extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            mahs: '',\r\n            HocSinh: '',\r\n            lop: '',\r\n            ngaysinh: ''\r\n            // isInputValid: true,\r\n            // errorMessageTenKhoi: '',\r\n            // errorMessageTenLop: '',\r\n            // errorMessageHocSinh: '',\r\n            // errorMessageMonChuyen: ''\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    // ValidationTenKhoi = (event) => {\r\n    //     if(this.state.tenkhoi ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageTenKhoi : 'Vui lòng nhập tên khối'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageTenKhoi : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // ValidationTenlop = (event) => {\r\n    //     if(this.state.tenlop ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageTenLop : 'Vui lòng nhập tên lớp'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageTenLop : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // ValidationHocSinh = (event) => {\r\n    //     if(this.state.HocSinh ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageHocSinh : 'Vui lòng nhập tên giáo viên'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageHocSinh : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    componentWillMount() {\r\n        if (this.props.taskHocSinh) {\r\n            this.setState({\r\n                id: this.props.taskHocSinh.id,\r\n                mahs: this.props.taskHocSinh.mahs,\r\n                HocSinh: this.props.taskHocSinh.HocSinh,\r\n                lop: this.props.taskHocSinh.lop,\r\n                ngaysinh: this.props.taskHocSinh.ngaysinh\r\n            })\r\n        }\r\n    }\r\n\r\n    // Validationmonday = (event) => {\r\n    //     if(this.state.ngaysinh ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessageMonChuyen : 'Vui lòng nhập môn dạy'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessageMonChuyen : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n\r\n    }\r\n\r\n    onClearST = () => {\r\n        this.setState({\r\n            mahs: '',\r\n            HocSinh: '',\r\n            lop: '',\r\n            ngaysinh: ''\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">Thêm học sinh\r\n                  <i className=\"fa fa-times-circle text-right\"\r\n                            onClick={this.onCloseForm}></i></h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    {/* Form input*/}\r\n\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label >Mã học sinh:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='mahs'\r\n                                value={this.state.mahs}\r\n                                onChange={this.onChange}\r\n                                onBlur={this.Validationmahs} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label >Họ và tên:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='HocSinh'\r\n                                value={this.state.HocSinh}\r\n                                onChange={this.onChange}\r\n                                onBlur={this.ValidationHocSinh} />\r\n                            {this.state.HocSinh === '' ? <span style={{ color: 'red' }}>\r\n                                {this.state.errorMessageHocSinh}\r\n                            </span> : null}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label >Lớp:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='lop'\r\n                                value={this.state.lop}\r\n                                onChange={this.onChange}\r\n                                onBlur={this.Validationmonday} />\r\n                            {this.state.lop === '' ? <span style={{ color: 'red' }}>\r\n                                {this.state.errorMessageMonChuyen}\r\n                            </span> : null}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label >Ngày sinh:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name='ngaysinh'\r\n                                value={this.state.ngaysinh}\r\n                                onChange={this.onChange}\r\n                                onBlur={this.ValidationHocSinh} />\r\n\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">\r\n                                <i className=\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\" onClick={this.onClearST}>\r\n                                <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormHocSinh;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemHocSinh extends Component {\r\n    \r\n        onDeleteHocSinh = () => {\r\n           this.props.onDeleteHocSinh(this.props.task.id);\r\n        }\r\n        \r\n        onUpdateHocSinh = () => {\r\n            this.props.onUpdateHocSinh(this.props.task.id); \r\n        }\r\n\r\n        \r\n        render(){\r\n        var {task,index } = this.props\r\n           \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{task.mahs}</td>\r\n                            <td className = \"text-center\">{task.HocSinh}</td>\r\n                            <td className = \"text-center\">{task.lop}</td>\r\n                            <td className = \"text-center\">{task.ngaysinh}</td>\r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\"  onClick = {this.onUpdateHocSinh}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onDeleteHocSinh}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i>\r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemHocSinh;","import React, { Component } from 'react';\r\nimport TaskItemHocSinh from './TaskItemHocSinh'\r\n\r\n\r\nclass TaskListHocSinh extends Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                fitterName: ''\r\n            }\r\n        }\r\n\r\n        render(){\r\n        var {taskHocSinh} = this.props\r\n        var elmTasks = taskHocSinh.map((task, index) =>{\r\n                return <TaskItemHocSinh  key ={index} index = {index}  task = {task}\r\n                onDeleteHocSinh = {this.props.onDeleteHocSinh}\r\n                onUpdateHocSinh = {this.props.onUpdateHocSinh}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Mã học sinh</th>\r\n                            <th className = \"text-center\">Họ và tên</th>\r\n                            <th className = \"text-center\">Lớp</th>\r\n                            <th className = \"text-center\">Ngày sinh</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListHocSinh;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormHocSinh from './components/TaskFormHocSinh'\r\nimport TaskListHocSinh from './components/TaskListHocSinh'\r\n\r\nclass HocSinh extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskHocSinh: [\r\n                {\r\n                    id: this.generateID(),\r\n                    mahs: '1112',\r\n                    HocSinh: 'Nguyễn Quang Thuận',\r\n                    lop: '10B5',\r\n                    ngaysinh: '22/10/2002'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mahs: '1113',\r\n                    HocSinh: 'Lê Văn Tiến',\r\n                    lop: '10B3',\r\n                    ngaysinh: '22/10/2002'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mahs: '1114',\r\n                    HocSinh: 'Nguyễn Lan Anh',\r\n                    lop: '11B2',\r\n                    ngaysinh: '22/10/2001'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mahs: '1115',\r\n                    HocSinh: 'Nguyễn Thị Lan',\r\n                    lop: '12B3',\r\n                    ngaysinh: '22/10/2000'\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    mahs: '1116',\r\n                    HocSinh: 'Trương Quang Việt',\r\n                    lop: '12B6',\r\n                    ngaysinh: '22/10/2000'\r\n\r\n                }\r\n            ],\r\n            isDisplayForm: false,\r\n        }\r\n    }\r\n\r\n    // onReset = () => {\r\n    //     var taskHocSinh = [\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mahs: '1112',\r\n    //             HocSinh: 'Nguyễn Quang Thuận',\r\n    //             lop: '10B5',\r\n    //             ngaysinh: '22/10/2002'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mahs: '1113',\r\n    //             HocSinh: 'Lê Văn Tiến',\r\n    //             lop: '10B3',\r\n    //             ngaysinh: '22/10/2002'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mahs: '1114',\r\n    //             HocSinh: 'Nguyễn Lan Anh',\r\n    //             lop: '11B2',\r\n    //             ngaysinh: '22/10/2001'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mahs: '1115',\r\n    //             HocSinh: 'Nguyễn Thị Lan',\r\n    //             lop: '12B3',\r\n    //             ngaysinh: '22/10/2000'\r\n\r\n    //         },\r\n    //         {\r\n    //             id: this.generateID(),\r\n    //             mahs: '1116',\r\n    //             HocSinh: 'Trương Quang Việt',\r\n    //             lop: '12B6',\r\n    //             ngaysinh: '22/10/2000'\r\n\r\n    //         }\r\n\r\n    //     ]\r\n    //     this.setState({\r\n    //         taskHocSinh: taskHocSinh\r\n    //     })\r\n    //     localStorage.setItem('taskHocSinh', JSON.stringify(taskHocSinh));\r\n    // }\r\n\r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm,\r\n            taskEditing: null\r\n        })\r\n\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('taskHocSinh')) {\r\n            var taskHocSinh = JSON.parse(localStorage.getItem('taskHocSinh'));\r\n            this.setState({\r\n                taskHocSinh: taskHocSinh\r\n            });\r\n        }\r\n    }\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        var { taskHocSinh } = this.state;\r\n        if (data.id === '') {\r\n            data.id = this.generateID();\r\n            taskHocSinh.push(data);\r\n\r\n        } else {\r\n            //Editing   \r\n            var index = this.findIndex(data.id);\r\n            taskHocSinh[index] = data;\r\n\r\n        }\r\n        this.setState({\r\n            taskHocSinh: taskHocSinh,\r\n            taskEditing: null\r\n        })\r\n        localStorage.setItem('taskHocSinh', JSON.stringify(taskHocSinh));\r\n        this.onCloseForm();\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { taskHocSinh } = this.state;\r\n        var result = -1;\r\n        taskHocSinh.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDeleteHocSinh = (id) => {\r\n        var { taskHocSinh } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            taskHocSinh.splice(index, 1);\r\n            this.setState({\r\n                taskHocSinh: taskHocSinh\r\n            });\r\n            localStorage.setItem('taskHocSinh', JSON.stringify(taskHocSinh));\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n\r\n\r\n    onUpdateHocSinh = (id) => {\r\n        var { taskHocSinh } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = taskHocSinh[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n    render() {\r\n\r\n        var { isDisplayForm, taskHocSinh, taskEditing } = this.state;\r\n\r\n        var elmTaskFromHocSinh = isDisplayForm\r\n            ? <TaskFormHocSinh\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                taskHocSinh={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n\r\n        return (\r\n            //   <div>\r\n            // menu\r\n            <div className='Form-app'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1>Danh sách học sinh trong trường</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-3 col-sm-3 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add HocSinh */}\r\n                            {elmTaskFromHocSinh}\r\n                        </div>\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm học sinh\r\n                                                    </button>&nbsp;\r\n                                                   </div>\r\n                            {/* <button type=\"button\" \r\n                                                            className=\"btn btn-danger mb-5 \"\r\n                                                            onClick = {this.onReset}>\r\n                                                        \r\n                                                        Reset All\r\n                                                    </button> */}\r\n                            {/* Task List*/}\r\n                            <TaskListHocSinh taskHocSinh={taskHocSinh}\r\n                                onDeleteHocSinh={this.onDeleteHocSinh}\r\n                                onUpdateHocSinh={this.onUpdateHocSinh} />\r\n                            <button type=\"button\" className=\"btn btn-primary\" style={{ display: 'block', margin: '0 auto' }}>1</button>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            //    </div>\r\n            //   </div>       \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default HocSinh","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport LopHoc from './QuanlyLopHoc'\r\nimport MonHoc from './QuanLyMonHoc';\r\nimport Danhsachquanly from './Danhsachquanly';\r\nimport Giaovien from './QuanlyGiaovien'\r\nimport HocSinh from './QuanlyHocSinh'\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Menu extends Component {\r\n    \r\n\r\n    \r\n\r\n    // onCancel = () => {\r\n    //     this.setState({\r\n    //         isDisplaySideBar: !this.state.isDisplaySideBar\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n       \r\n\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <div className='navbar-header'>\r\n                        <h4 className='float-right'>admin</h4>\r\n                    </div>\r\n\r\n                    <input type='checkbox' id='check' />\r\n                    <label htmlFor=\"check\">\r\n                        <i className=\"fas fa-bars\" id=\"btn\" onClick={this.onBar}></i>\r\n                        <i className=\"fas fa-times\" id=\"cancel\" onClick={this.onCancel} ></i>\r\n                    </label>\r\n\r\n                    \r\n                    <img className=\"img-bg\" alt=\"Image\" />\r\n                    \r\n                    <div className='sidebar'>\r\n                        <header>Danh sách quản lý</header>\r\n                        <ul>\r\n                            <li>\r\n                                <NavLink to='/danhsachquanly'><i className=\"far fa-question-circle\"></i>Thông tin</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to='/quanlylophoc' activeStyle={{ background: '#1a2225' }}>Quản lý lớp học</NavLink>\r\n                            </li>\r\n                            {/* <li>\r\n                                <NavLink to='/quanlydiem' activeStyle={{ background: '#1a2225' }}>Quản lý điểm</NavLink>\r\n                            </li> */}\r\n                            <li>\r\n                                <NavLink to='/quanlymonhoc' activeStyle={{ background: '#1a2225' }}>Quản lý môn học</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to='/quanlygiaovien' activeStyle={{ background: '#1a2225' }}>Quản lý giáo viên</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to='/quanlyhocsinh' activeStyle={{ background: '#1a2225' }}>Quản lý học sinh</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <a>\r\n                                <i className=\"fas fa-sign-out-alt\"></i>\r\n                                Đăng xuất</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                  \r\n\r\n                    <Route path=\"/danhsachquanly\" component={Danhsachquanly} />\r\n                    <Route path=\"/quanlymonhoc\" component={MonHoc} />\r\n                    <Route path=\"/quanlylophoc\" component={LopHoc} />\r\n                    <Route path=\"/quanlygiaovien\" component={Giaovien} />\r\n                    <Route path=\"/quanlyhocsinh\" component={HocSinh} />\r\n\r\n                </div>\r\n\r\n            </Router>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Menu;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Menu from './menu'\n\nReactDOM.render(\n  \n  <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('root')\n  \n  \n);\n// ReactDOM.render(\n  \n//   <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('menu')\n  \n  \n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}